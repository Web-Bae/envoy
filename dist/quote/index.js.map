{
  "version": 3,
  "sources": ["../../bin/live-reload.js", "../../src/quote/index.ts"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "window.Webflow ||= [];\nwindow.Webflow.push(() => {\n  // Get references to the radio buttons and h2 elements\n  const annualRadio = document.querySelector<HTMLInputElement>('#Annually');\n  const monthlyRadio = document.querySelector<HTMLInputElement>('#Monthly');\n  const standardVisitorPrice = document.querySelector<HTMLInputElement>('#standardVisitorPrice');\n  const premiumVisitorPrice = document.querySelector<HTMLInputElement>('#premiumVisitorPrice');\n\n  if (!annualRadio || !monthlyRadio || !standardVisitorPrice || !premiumVisitorPrice) {\n    console.error('Could not find radio buttons or price elements');\n    console.error({ annualRadio, monthlyRadio, standardVisitorPrice, premiumVisitorPrice });\n    return;\n  }\n\n  // Get the div sibling to the annualRadio input\n  const annualRadioDiv = annualRadio.previousElementSibling;\n\n  if (!annualRadioDiv) {\n    console.error('Could not find annual radio div');\n    console.error({ annualRadioDiv });\n    return;\n  }\n\n  // Function to update the prices based on the selected radio button\n  function updatePrices() {\n    if (annualRadio?.checked) {\n      standardVisitorPrice!.textContent = '109';\n      premiumVisitorPrice!.textContent = '329';\n    } else if (monthlyRadio?.checked) {\n      standardVisitorPrice!.textContent = '131';\n      premiumVisitorPrice!.textContent = '395';\n    }\n  }\n\n  // Add event listeners to the radio buttons\n  annualRadio.addEventListener('change', updatePrices);\n  monthlyRadio.addEventListener('change', updatePrices);\n\n  // Add the .w--redirected-checked class to the annualRadioDiv on page load\n  annualRadioDiv.classList.add('w--redirected-checked');\n\n  // Initial update (in case the page loads with one of the options already selected)\n  updatePrices();\n\n  // -----\n\n  // Define a structure for prices based on different criteria\n  const prices = {\n    Annually: {\n      Workplace: {\n        Standard: 3,\n        Premium: 5,\n        'Premium Plus': 7,\n      },\n      Visitors: {\n        Standard: 109,\n        Premium: 329,\n      },\n      'Equip-iPad': 449,\n      'Equip-Badge-Printer': 249,\n      'Equip-WindFall-iPad-Stand': 149,\n    },\n    Monthly: {\n      Workplace: {\n        Standard: 3,\n        Premium: 5,\n        'Premium Plus': 7,\n      },\n      Visitors: {\n        Standard: 131,\n        Premium: 395,\n      },\n      'Equip-iPad': 449,\n      'Equip-Badge-Printer': 249,\n      'Equip-WindFall-iPad-Stand': 149,\n    },\n  };\n\n  // Function to validate a number, ensuring it's not empty or negative\n  function validateNumber(inputValue: string | number): number {\n    if (typeof inputValue === 'number') {\n      return inputValue;\n    }\n    const number = Number(inputValue);\n    return number > 0 ? number : 0;\n  }\n\n  // Function to calculate total prices based on selected options and quantities\n  const calculateTotals = (): void => {\n    // Determine the billing period and select the corresponding price list\n    const workplacePlanEl = document.querySelector<HTMLInputElement>(\n      'input[name=\"Workplace-Plan\"]:checked'\n    );\n    const numEmployeesEl = document.querySelector<HTMLInputElement>('input[name=\"Employees\"]');\n    if (!workplacePlanEl || !numEmployeesEl) {\n      console.error(\n        'Could not find billing period, workplace plan, or number of employees elements'\n      );\n      console.error({ workplacePlanEl, numEmployeesEl });\n      return;\n    }\n\n    const billingPeriod = annualRadio.checked ? 'Annually' : 'Monthly';\n    const pricesToUse = prices[billingPeriod];\n    const workplacePlan = workplacePlanEl.value as 'Standard' | 'Premium' | 'Premium Plus';\n    const numEmployees = validateNumber(numEmployeesEl.value);\n    const workplacePrice = pricesToUse['Workplace'][workplacePlan] * numEmployees;\n\n    let lineItemsText: string = '',\n      monthlyPrice: number = 0,\n      oneTimePrice: number = 0;\n\n    if (numEmployees > 0) {\n      lineItemsText += `Workplace - ${numEmployees} employees, ${workplacePlan.toLowerCase()} plan - $${workplacePrice}/month | `;\n      monthlyPrice += workplacePrice;\n    }\n\n    // Calculate visitors plan price\n    const visitorsPlanEl = document.querySelector<HTMLInputElement>(\n      'input[name=\"Visitor-Plan\"]:checked'\n    );\n    const numLocationsEl = document.querySelector<HTMLInputElement>('input[name=\"Locations\"]');\n    if (!visitorsPlanEl || !numLocationsEl) {\n      console.error('Could not find visitors plan or number of locations elements');\n      console.error({ visitorsPlanEl, numLocationsEl });\n      return;\n    }\n\n    const visitorsPlan = visitorsPlanEl.value as 'Standard' | 'Premium';\n    const numLocations = validateNumber(numLocationsEl.value);\n\n    const visitorsPrice = pricesToUse['Visitors'][visitorsPlan] * numLocations;\n\n    if (numLocations > 0) {\n      lineItemsText += `Visitors - ${numLocations} locations, ${visitorsPlan.toLowerCase()} plan, billed ${billingPeriod.toLowerCase()} - $${visitorsPrice}/month | `;\n      monthlyPrice += visitorsPrice;\n    }\n\n    // Calculate equipment prices\n    const equipmentItemEls = document.querySelectorAll<HTMLDivElement>(\n      '.quote-calc_equipment-item'\n    );\n\n    equipmentItemEls.forEach(function (equipmentItemEl) {\n      const valueEl = equipmentItemEl.querySelector<HTMLInputElement>('input');\n      if (!valueEl) {\n        console.error('Could not find equipment item input element');\n        console.error({ equipmentItemEl, valueEl });\n        return;\n      }\n      const number = validateNumber(valueEl.value);\n      if (number > 0) {\n        const productName = valueEl.getAttribute('name') as\n          | 'Equip-iPad'\n          | 'Equip-Badge-Printer'\n          | 'Equip-WindFall-iPad-Stand';\n        if (!productName) {\n          console.error('Could not find equipment item name element');\n          return;\n        }\n        const price = pricesToUse[productName] * number;\n\n        lineItemsText += `${productName.replace('Equip ', '')} - ${number} - $${price} | `;\n        oneTimePrice += price;\n      }\n    });\n\n    lineItemsText = lineItemsText.slice(0, -3);\n\n    const priceText: string = `$${monthlyPrice}/month, billed ${billingPeriod.toLowerCase()}`;\n\n    if (oneTimePrice > 0) {\n      lineItemsText = `$${oneTimePrice} one-time + ` + priceText;\n    }\n\n    // Update form fields with the calculated price information\n    const marketoEmailQuoteText1El = document.querySelector<HTMLInputElement>(\n      '.marketo-form input[name=\"emailQuoteText1\"]'\n    );\n    const marketoEmailQuoteText2El = document.querySelector<HTMLInputElement>(\n      '.marketo-form input[name=\"emailQuoteText2\"]'\n    );\n    if (!marketoEmailQuoteText1El || !marketoEmailQuoteText2El) {\n      console.error('Could not find marketo email quote text elements');\n      console.error({ marketoEmailQuoteText1El, marketoEmailQuoteText2El });\n      return;\n    }\n\n    // Set the values of the hidden form fields\n    marketoEmailQuoteText1El.value = lineItemsText;\n    marketoEmailQuoteText2El.value = priceText;\n  };\n\n  // Calculate Totals anytime a radio is clicked\n  const radioEls = document.querySelectorAll<HTMLInputElement>(\n    'input[type=\"radio\"], input[type=\"number\"]'\n  );\n  radioEls.forEach(function (radioEl) {\n    radioEl.addEventListener('click', calculateTotals);\n  });\n});\n"],
  "mappings": "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",
  "names": []
}
